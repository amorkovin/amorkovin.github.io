{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/footer.js","webpack:///./src/components/container.js","webpack:///./src/pages/index.js","webpack:///./src/components/header.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["loader","enqueue","React","createContext","props","footerText","children","className","containerStyles","container","headerText","style","color","background","class","src","alt","to","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"kJAcyBA,QAAOC,QAELC,IAAMC,cAAc,I,aCfhC,WAACC,GAAD,OACd,6BACC,uEAA6CA,EAAMC,c,kBCAtC,kBAAGC,EAAH,EAAGA,SAAH,OACb,yBAAKC,UAAWC,IAAgBC,WAAYH,ICE/B,4BACb,kBAAC,EAAD,KACC,kBAAC,IAAD,CAAQI,WAAW,SAClB,wBAAIC,MAAO,CAAEC,MAAO,OAAQC,WAAW,UAAvC,iBACA,uBAAGC,MAAM,WAAT,iBACA,yBAAKC,IAAI,6CAA6CC,IAAI,SAC1D,0FAC6D,kBAAC,IAAD,CAAMC,GAAG,UAAT,SAD7D,KAGA,uEACA,kBAAC,EAAD,CAAQZ,WAAW,+C,iCChBvB,oBACe,aAAED,GAAF,OACd,6BACC,iDACA,gEAAsCA,EAAMM,e,oBCJ9C,IAAsBQ,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,2ECsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEvB,IAAMwB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-index-js-5726477095abb1154813.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nexport default (props) => (\n\t<div>\n\t\t<p>Это подвал! Текс из свойства footerText: {props.footerText}</p>\n\t</div>\n)","import React from \"react\"\nimport containerStyles from \"./container.module.css\"\n\nexport default ({ children }) => (\n  <div className={containerStyles.container}>{children}</div>\n)","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Header from \"../components/header\"\nimport Footer from \"../components/footer\"\nimport Container from \"../components/container\"\n\nexport default () => (\n  <Container>\n  \t<Header headerText=\"test\"/>\t\n    <h1 style={{ color: \"teal\", background: `white` }}>Hello Gatsby!</h1>\n    <p class=\"my-text\">What a world.</p>\n    <img src=\"https://source.unsplash.com/random/400x200\" alt=\"Test\" />\n    <p>\n    \tВсем привет. Здесь будет ссылка на страницу about. Вот она: <Link to=\"/about\">about</Link>.\n    </p>\n    <p>Алиса, ты самая лучшая девочка на свете!</p>\n    <Footer footerText=\"Вот это значение в свойтсве footerText.\" />\n  </Container>\n)","import React from \"react\"\nexport default ( props ) => (\n\t<div>\n\t\t<h1>This is a header!</h1>\n\t\t<h2>Значнение переданного параметра: {props.headerText}</h2>\n\t</div>\n)","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}